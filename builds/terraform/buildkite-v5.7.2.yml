---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Buildkite stack v5.7.2"

# The Buildkite Elastic CI Stack for AWS gives you a private,
# autoscaling Buildkite Agent cluster. Use it to parallelize
# large test suites across thousands of nodes, run tests and
# deployments for Linux or Windows based services and apps,
# or run AWS ops tasks.
#
# To gain a better understanding of how Elastic CI Stack works
# and how to use it most effectively and securely, check out
# the following resources:
#
# * Elastic CI Stack for AWS Overview: https://buildkite.com/docs/agent/v3/elastic_ci_aws
# * Elastic CI Stack for AWS Tutorial: https://buildkite.com/docs/tutorials/elastic-ci-stack-aws
# * Running Buildkite Agent on AWS: https://buildkite.com/docs/agent/v3/aws
# * GitHub Repo for Elastic CI Stack: https://github.com/buildkite/elastic-ci-stack-for-aws
# * Template Parameters for Elastic CI Stack for AWS: https://buildkite.com/docs/agent/v3/elastic-ci-aws/parameters
# * Using AWS Secrets Manager: https://buildkite.com/docs/agent/v3/aws/secrets-manager
# * VPC Design: https://buildkite.com/docs/agent/v3/aws/vpc
# * CloudFormation Service Role: https://buildkite.com/docs/agent/v3/elastic-ci-aws/cloudformation-service-role

Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Buildkite Configuration
        Parameters:
        - BuildkiteAgentTokenParameterStorePath
        - BuildkiteAgentTokenParameterStoreKMSKey
        - BuildkiteAgentToken
        - BuildkiteQueue

      - Label:
          default: Advanced Buildkite Configuration
        Parameters:
        - BuildkiteAgentRelease
        - BuildkiteAgentTags
        - BuildkiteAgentTimestampLines
        - BuildkiteAgentExperiments
        - BuildkiteTerminateInstanceAfterJob
        - BuildkiteAdditionalSudoPermissions
        - BuildkiteWindowsAdministrator

      - Label:
          default: Network Configuration
        Parameters:
        - VpcId
        - Subnets
        - AvailabilityZones
        - SecurityGroupId
        - AssociatePublicIpAddress

      - Label:
          default: Instance Configuration
        Parameters:
        - ImageId
        - ImageIdParameter
        - InstanceType
        - EnableInstanceStorage
        - AgentsPerInstance
        - KeyName
        - SpotPrice
        - SecretsBucket
        - ArtifactsBucket
        - AuthorizedUsersUrl
        - BootstrapScriptUrl
        - RootVolumeSize
        - RootVolumeName
        - RootVolumeType
        - ManagedPolicyARN
        - InstanceRoleName
        - IMDSv2Tokens

      - Label:
          default: Auto-scaling Configuration
        Parameters:
        - MinSize
        - MaxSize
        - OnDemandPercentage
        - ScaleOutFactor
        - ScaleInIdlePeriod
        - ScaleOutForWaitingJobs
        - InstanceCreationTimeout

      - Label:
          default: Cost Allocation Configuration
        Parameters:
        - EnableCostAllocationTags
        - CostAllocationTagName
        - CostAllocationTagValue

      - Label:
          default: Docker Daemon Configuration
        Parameters:
        - EnableDockerUserNamespaceRemap
        - EnableDockerExperimental

      - Label:
          default: Docker Registry Configuration
        Parameters:
        - ECRAccessPolicy

      - Label:
          default: Plugin Configuration
        Parameters:
        - EnableSecretsPlugin
        - EnableECRPlugin
        - EnableDockerLoginPlugin

Parameters:
  KeyName:
    Description: Optional - SSH keypair used to access the buildkite instances via ec2_user, setting this will enable SSH ingress
    Type: String
    Default: ""

  BuildkiteAgentRelease:
    Type: String
    AllowedValues:
      - stable
      - beta
      - edge
    Default: "stable"

  BuildkiteAgentToken:
    Description: Buildkite agent registration token. Deprecated, use BuildkiteAgentTokenParameterStorePath instead.
    Type: String
    NoEcho: true
    Default: ""

  BuildkiteAgentTokenParameterStorePath:
    Description: AWS SSM path to the Buildkite agent registration token (this takes precedence over BuildkiteAgentToken). Expects a leading slash ('/').
    Type: String
    Default: ""
    AllowedPattern: "^$|^/[a-zA-Z0-9_.\\-/]+$"
    ConstraintDescription: "Expects a leading forward slash"

  BuildkiteAgentTokenParameterStoreKMSKey:
    Description: AWS KMS key ID used to encrypt the SSM parameter (if encrypted)
    Type: String
    Default: ""

  BuildkiteAgentTags:
    Description: Additional tags separated by commas to provide to the agent. E.g os=linux,llamas=always
    Type: String
    Default: ""

  BuildkiteAgentTimestampLines:
    Description: Set to true to prepend timestamps to every line of output
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  BuildkiteAgentExperiments:
    Description: Agent experiments to enable, comma delimited. See https://github.com/buildkite/agent/blob/master/EXPERIMENTS.md.
    Type: String
    Default: ""

  BuildkiteTerminateInstanceAfterJob:
    Description: Set to "true" to terminate the instance after a job has completed.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  BuildkiteAdditionalSudoPermissions:
    Description: Optional - Comma separated list of commands to allow the buildkite-agent user to run using sudo.
    Type: String
    Default: ""

  BuildkiteWindowsAdministrator:
    Description: Set to "true" to add the local "buildkite-agent" user account to the local Windows Administrator group.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

  AgentsPerInstance:
    Description: Number of Buildkite agents to run on each instance
    Type: Number
    Default: 1
    MinValue: 1

  SecretsBucket:
    Description: Optional - Name of an existing S3 bucket containing pipeline secrets (Created if left blank)
    Type: String
    Default: ""

  ArtifactsBucket:
    Description: Optional - Name of an existing S3 bucket for build artifact storage
    Type: String
    Default: ""

  BootstrapScriptUrl:
    Description: Optional - HTTPS or S3 URL to run on each instance during boot
    Type: String
    Default: ""

  AuthorizedUsersUrl:
    Description: Optional - HTTPS or S3 URL to periodically download ssh authorized_keys from, setting this will enable SSH ingress. authorized_keys are applied to ec2_user
    Type: String
    Default: ""

  VpcId:
    Type: String
    Description: Optional - Id of an existing VPC to launch instances into. Leave blank to have a new VPC created
    Default: ""

  Subnets:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of two existing VPC subnet ids where EC2 instances will run. Required if setting VpcId.
    Default: ""

  AvailabilityZones:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of AZs that subnets are created in (if Subnets parameter is not specified)
    Default: ""

  InstanceType:
    Description: Instance type. Comma-separated list with 1-4 instance types. The order is a prioritized preference for launching OnDemand instances, and a non-prioritized list of types to consider for Spot Instances (where used).
    Type: String
    Default: t3.large
    MinLength: 1
    AllowedPattern: "^[\\w\\.]+(,[\\w\\.]*){0,3}$"
    ConstraintDescription: "must contain 1-4 instance types separated by commas. No space before/after the comma."

  SpotPrice:
    Description: Maximum spot price to use for the instances, in instance cost per hour. Values >0 will result in 100% of instances being spot. 0 means only use normal (non-spot) instances. This parameter is deprecated - we recommend setting to 0 and using OnDemandPercentage to opt into spot instances.
    Type: String
    Default: 0

  MaxSize:
    Description: Maximum number of instances
    Type: Number
    Default: 10
    MinValue: 1

  MinSize:
    Description: Minimum number of instances
    Type: Number
    Default: 0

  OnDemandPercentage:
    Description: Percentage of total instances that should launch as OnDemand. Default is 100% OnDemand - reduce this to use some Spot Instances when they're available and cheaper than the OnDemand price. A value of 70 means 70% OnDemand and 30% Spot Instances.
    Type: Number
    Default: 100
    MinValue: 0
    MaxValue: 100

  ScaleOutFactor:
    Description: A decimal factor to apply to scale out changes to speed up or slow down scale-out
    Type: Number
    Default: 1.0

  ScaleInIdlePeriod:
    Description: Number of seconds an agent must be idle before terminating
    Type: Number
    Default: 600

  ScaleOutForWaitingJobs:
    Type: String
    Description: Whether to scale-out for steps behind wait steps. Make sure you have a long enough idle period!
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  InstanceCreationTimeout:
    Description: Timeout period for Autoscaling Group Creation Policy
    Type: String
    Default: ""

  RootVolumeSize:
    Description: Size of each instance's root EBS volume (in GB)
    Type: Number
    Default: 250
    MinValue: 10

  RootVolumeName:
    Description: Name of the root block device for your AMI
    Type: String
    Default: ""

  RootVolumeType:
    Description: Type of root volume to use
    Type: String
    Default: "gp3"

  SecurityGroupId:
    Type: String
    Description: Optional - Comma separated list of security group ids to assign to instances
    Default: ""

  ImageId:
    Type: String
    Description: Optional - Custom AMI to use for instances (must be based on the stack's AMI)
    Default: ""

  ImageIdParameter:
    Type: String
    Description: Optional - Custom AMI SSM Parameter to use for instances (must be based on the stack's AMI)
    Default: ""

  ManagedPolicyARN:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of managed IAM policy ARNs to attach to the instance role
    Default: ""

  IMDSv2Tokens:
    Type: String
    Description: Whether IMDSv2 tokens must be used for the Instance Metadata Service.
    AllowedValues:
      - optional
      - required
    Default: optional

  InstanceRoleName:
    Type: String
    Description: Optional - A name for the IAM Role attached to the Instance Profile
    Default: ""

  InstanceRolePermissionsBoundaryARN:
    Type: String
    Description: The ARN of the policy used to set the permissions boundary for the role.
    Default: ""

  InstanceOperatingSystem:
    Type: String
    Description: The operating system to run on the instances
    AllowedValues:
      - linux
      - windows
    Default: "linux"

  ECRAccessPolicy:
    Type: String
    Description: ECR access policy to give container instances
    AllowedValues:
      - none
      - readonly
      - poweruser
      - full
    Default: "none"

  AssociatePublicIpAddress:
    Type: String
    Description: Associate instances with public IP addresses
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  EnableSecretsPlugin:
    Type: String
    Description: Enables s3-secrets plugin for all pipelines
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  EnableECRPlugin:
    Type: String
    Description: Enables ecr plugin for all pipelines
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  EnableDockerLoginPlugin:
    Type: String
    Description: Enables docker-login plugin for all pipelines
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  EnableDockerUserNamespaceRemap:
    Type: String
    Description: Enables Docker user namespace remapping so docker runs as buildkite-agent
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  EnableDockerExperimental:
    Type: String
    Description: Enables Docker experimental features
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  EnableInstanceStorage:
    Type: String
    Description: Mount available NVMe Instance Storage at /mnt/ephemeral
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  EnableCostAllocationTags:
    Type: String
    Description: Enables AWS Cost Allocation tags for all resources in the stack. See https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  CostAllocationTagName:
    Type: String
    Description: The name of the Cost Allocation Tag used for billing purposes
    Default: "CreatedBy"

  CostAllocationTagValue:
    Type: String
    Description: The value of the Cost Allocation Tag used for billing purposes
    Default: "buildkite-elastic-ci-stack-for-aws"

  EnableAgentGitMirrorsExperiment:
    Type: String
    Description: Enables the git-mirrors experiment in the agent
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

Rules:
  HasToken:
    Assertions:
      - Assert:
          !Or
            - !Not
              - !Equals
                - !Ref BuildkiteAgentToken
                - ""
            - !Not
              - !Equals
                - !Ref BuildkiteAgentTokenParameterStorePath
                - ""
        AssertDescription: "You must provide BuildkiteAgentToken or BuildkiteAgentTokenParameterStorePath"

Outputs:
  VpcId:
    Value:
      !If [ CreateVpcResources, !Ref Vpc, !Ref VpcId ]
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

  ManagedSecretsBucket:
    Value:
      !If [ CreateSecretsBucket, !Ref ManagedSecretsBucket, "Undefined" ]
    Export:
      Name: !Sub '${AWS::StackName}-ManagedSecretsBucket'

  ManagedSecretsLoggingBucket:
    Value:
      !If [ CreateSecretsBucket, !Ref ManagedSecretsLoggingBucket, "Undefined" ]
    Export:
      Name: !Sub '${AWS::StackName}-ManagedSecretsLoggingBucket'

  AutoScalingGroupName:
    Value: !Ref AgentAutoScaleGroup
    Export:
      Name: !Sub '${AWS::StackName}-AutoScalingGroupName'

  InstanceRoleName:
    Value: !Ref IAMRole
    Export:
      Name: !Sub '${AWS::StackName}-InstanceRoleName'

Conditions:
    SpotPriceSet:
      !Not [ !Equals [ !Ref SpotPrice, 0 ] ]

    CreateVpcResources:
      !Equals [ !Ref VpcId, "" ]

    CreateSecurityGroup:
      !Equals [ !Ref SecurityGroupId, "" ]

    CreateSecretsBucket:
      !And
         - !Equals [ !Ref EnableSecretsPlugin, "true"]
         - !Equals [ !Ref SecretsBucket, "" ]

    SetInstanceRoleName:
      !Not [ !Equals [ !Ref InstanceRoleName, "" ] ]

    SetInstanceRolePermissionsBoundaryARN:
      !Not [ !Equals [ !Ref InstanceRolePermissionsBoundaryARN, "" ] ]

    UseSpecifiedSecretsBucket:
      !Not [ !Equals [ !Ref SecretsBucket, "" ] ]

    HasSecretsBucket:
      !Or [ !Condition CreateSecretsBucket, !Condition UseSpecifiedSecretsBucket ]

    UseSpecifiedAvailabilityZones:
      !Not [ !Equals [ !Join [ "", !Ref AvailabilityZones ], "" ]  ]

    UseArtifactsBucket:
      !Not [ !Equals [ !Ref ArtifactsBucket, "" ] ]

    HasImageId:
      !Not [ !Equals [ !Ref ImageId, "" ] ]
    HasImageIdParameter:
      !Not [ !Equals [ !Ref ImageIdParameter, "" ] ]

    UseDefaultInstanceCreationTimeout:
      !Equals [ !Ref InstanceCreationTimeout, "" ]

    UseDefaultRootVolumeName:
      !Equals [ !Ref RootVolumeName, "" ]

    UseInstanceType2:
      !Not [ !Equals [ !Select [ "1", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ], ""] ]

    UseInstanceType3:
      !Not [ !Equals [ !Select [ "2", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ], ""] ]

    UseInstanceType4:
      !Not [ !Equals [ !Select [ "3", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ], ""] ]

    UseManagedPolicyARN:
      !Not [ !Equals [ !Join [ "", !Ref ManagedPolicyARN ], "" ] ]

    UseECR:
      !Not [ !Equals [ !Ref ECRAccessPolicy, "none" ] ]

    UseCustomerManagedParameterPath:
      !Not [ !Equals [ !Ref BuildkiteAgentTokenParameterStorePath, "" ] ]
    UseCustomerManagedKeyForParameterStore:
      !Not [ !Equals [ !Ref BuildkiteAgentTokenParameterStoreKMSKey, "" ] ]
    CreateAgentTokenParameter:
      !Equals [ !Ref BuildkiteAgentTokenParameterStorePath, "" ]

    HasVariableSize:
      !Not [ !Equals [ !Ref MaxSize, !Ref MinSize ] ]

    UseCostAllocationTags:
      !Equals [ !Ref EnableCostAllocationTags, "true" ]

    HasKeyName:
      !Not [ !Equals [ !Ref KeyName, "" ] ]

    EnableSshIngress:
      !And
        - { Condition : CreateSecurityGroup }
        # Enable ingress if a key can be specified another way
        - !Or
          - { Condition: HasKeyName }
          - !Not [ !Equals [ !Ref AuthorizedUsersUrl, "" ] ]

    # Whether or not there's any managed polices to attach
    HasManagedPolicies:
      !Or [ { Condition: UseManagedPolicyARN }, { Condition: UseECR } ]

    UseWindowsAgents:
      !Equals [ !Ref InstanceOperatingSystem, "windows" ]

    UseLinuxAgents:
      !Equals [ !Ref InstanceOperatingSystem, "linux" ]

    UsingArmInstances:
      !Or
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "m6g" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "m6gd" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "t4g" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "a1" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "c6g" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "c6gd" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "c6gn" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "r6g" ]
        - !Equals [ !Select [ 0, !Split [ ".", !Ref InstanceType ] ], "r6gd" ]

Mappings:
  ECRManagedPolicy:
    none      : { Policy: '' }
    readonly  : { Policy: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly' }
    poweruser : { Policy: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser' }
    full      : { Policy: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess' }

  # Generated from Makefile via build/mappings.yml
  AWSRegion2AMI:
    us-east-1 : { linuxamd64: ami-062eacba6cdd82725, linuxarm64: ami-06148cc86dedde3c5, windows: ami-0edff67d0a87097f4 }
    us-east-2 : { linuxamd64: ami-00abe272e96e4c11e, linuxarm64: ami-0574f563dc2a07790, windows: ami-08d5cb11695160256 }
    us-west-1 : { linuxamd64: ami-0040b0237cbe4998d, linuxarm64: ami-0282726448bbc73d6, windows: ami-01966f9a48779a6c4 }
    us-west-2 : { linuxamd64: ami-0cc59b27b2a1d0b43, linuxarm64: ami-013dda1ea4956d5aa, windows: ami-06cb8f9e6688f5832 }
    af-south-1 : { linuxamd64: ami-0fe48610114cecc0f, linuxarm64: ami-0f66679a65ebe3212, windows: ami-0236ba6ebacb1edfb }
    ap-east-1 : { linuxamd64: ami-0b5731b0f7b4bdf7f, linuxarm64: ami-0c03f463d351d08d9, windows: ami-0dfa3dc8e8d8dbd0a }
    ap-south-1 : { linuxamd64: ami-035355e82066cd52d, linuxarm64: ami-001efbde4e8e3133a, windows: ami-021801c193bd024b7 }
    ap-northeast-2 : { linuxamd64: ami-0ff0f03a0313f4c81, linuxarm64: ami-0d3c2e6f5addc8085, windows: ami-022c9981ab1609802 }
    ap-northeast-1 : { linuxamd64: ami-0467fea7149f51523, linuxarm64: ami-0a19e292c3519d971, windows: ami-01acd5397bc179216 }
    ap-southeast-2 : { linuxamd64: ami-0cfe8455ed05c6145, linuxarm64: ami-0528d5bc6784e8b6e, windows: ami-0afa71a5ce9211f08 }
    ap-southeast-1 : { linuxamd64: ami-0cb521d50439ade6f, linuxarm64: ami-0a8742cd3bf63fe58, windows: ami-0614ee60173188857 }
    ca-central-1 : { linuxamd64: ami-075a41b3f6c82f85b, linuxarm64: ami-0f27bd151cfda8311, windows: ami-086186f2916fb1a74 }
    eu-central-1 : { linuxamd64: ami-025a090c3b8808aaa, linuxarm64: ami-00d32e035517c74ab, windows: ami-08b845b963d1735ba }
    eu-west-1 : { linuxamd64: ami-01eb98d0207d80529, linuxarm64: ami-0872cdfb4e6a7694c, windows: ami-078f5b19675c1fa74 }
    eu-west-2 : { linuxamd64: ami-06d3a9437937da27e, linuxarm64: ami-0da66834ad521cab4, windows: ami-0ed69c5d5d857995c }
    eu-south-1 : { linuxamd64: ami-0902467288b4a7dc1, linuxarm64: ami-0ec11bb761d6946b0, windows: ami-038ca8b5552b64251 }
    eu-west-3 : { linuxamd64: ami-047f5f482c48669f1, linuxarm64: ami-088bfee2091015cb4, windows: ami-057aeefab40278ebb }
    eu-north-1 : { linuxamd64: ami-0f2847e35d22ec217, linuxarm64: ami-0476d0df80efddf12, windows: ami-0706ccd52e50582a0 }
    me-south-1 : { linuxamd64: ami-08f791b3cbfa03200, linuxarm64: ami-0fe6a695893ddf7db, windows: ami-00f6b842be494e030 }
    sa-east-1 : { linuxamd64: ami-06ee97e7ca92946e2, linuxarm64: ami-04a65ff0779a10bf6, windows: ami-05e59e8afed087e2c }

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Condition: CreateVpcResources
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  Gateway:
    Type: AWS::EC2::InternetGateway
    Condition: CreateVpcResources
    Properties:
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Condition: CreateVpcResources
    Properties:
      InternetGatewayId: !Ref Gateway
      VpcId: !Ref Vpc

  Subnet0:
    Type: AWS::EC2::Subnet
    Condition: CreateVpcResources
    DependsOn:
      - GatewayAttachment
    Properties:
      AvailabilityZone:
        !If
          - "UseSpecifiedAvailabilityZones"
          - !Select [ 0, !Ref AvailabilityZones ]
          - !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  Subnet1:
    Type: AWS::EC2::Subnet
    Condition: CreateVpcResources
    DependsOn:
      - GatewayAttachment
    Properties:
      AvailabilityZone:
        !If
          - "UseSpecifiedAvailabilityZones"
          - !Select [ 1, !Ref AvailabilityZones ]
          - !Select [ 1, !GetAZs '' ]
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  Routes:
    Type: AWS::EC2::RouteTable
    Condition: CreateVpcResources
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  RouteDefault:
    Type: AWS::EC2::Route
    Condition: CreateVpcResources
    DependsOn:
      - GatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Gateway
      RouteTableId: !Ref Routes

  Subnet0Routes:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVpcResources
    Properties:
      SubnetId: !Ref Subnet0
      RouteTableId: !Ref Routes

  Subnet1Routes:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: CreateVpcResources
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref Routes

  # A resource that depends on the leaf nodes of the VPC configuration so that
  # a strict ordering can be established on teardown.
  VpcComplete:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      VpcResources: !If
        - CreateVpcResources
        - [ !Ref RouteDefault, !Ref Subnet0Routes, !Ref Subnet1Routes ]
        - !Ref AWS::NoValue

  BuildkiteAgentTokenParameter:
    Type: AWS::SSM::Parameter
    Condition: CreateAgentTokenParameter
    Properties:
      Name: !Sub "/${AWS::StackName}/buildkite/agent-token"
      Type: String
      Value: !Ref BuildkiteAgentToken

  # Allow ec2 instances to assume a role and be granted the IAMPolicies
  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [ !Ref IAMRole ]

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If [ SetInstanceRoleName, !Ref InstanceRoleName, !Sub "${AWS::StackName}-Role" ]
      PermissionsBoundary: !If [ SetInstanceRolePermissionsBoundaryARN, !Ref InstanceRolePermissionsBoundaryARN, !Ref "AWS::NoValue" ]
      ManagedPolicyArns: !If
          - HasManagedPolicies
          # Support multiple policies to attach by merging the values together and splitting on ','
          - !Split
            - ','
            # Join will skip over AWS::NoValue values
            - !Join
             - ','
             - - !If
                 - UseECR
                 - !FindInMap [ ECRManagedPolicy, !Ref ECRAccessPolicy, 'Policy' ]
                 - !Ref 'AWS::NoValue'
               # This may support multiple values of its own (separated by commas)
               - !If
                 - UseManagedPolicyARN
                 - !Join [ ',', !Ref ManagedPolicyARN ]
                 - !Ref 'AWS::NoValue'
          - !Ref 'AWS::NoValue'
      Policies:
        - !If
          - UseCustomerManagedKeyForParameterStore
          - PolicyName: DecryptAgentToken
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - kms:Decrypt
                  Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${BuildkiteAgentTokenParameterStoreKMSKey}
          - !Ref 'AWS::NoValue'
        - PolicyName: ReadAgentToken
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ssm:GetParameter
                Resource:
                  !Sub
                    - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${ParameterPath}
                    - ParameterPath: !If [ UseCustomerManagedParameterPath, !Ref BuildkiteAgentTokenParameterStorePath, !Ref BuildkiteAgentTokenParameter ]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ autoscaling.amazonaws.com, ec2.amazonaws.com ]
            Action: sts:AssumeRole
      Path: /

  IAMPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstancePolicy
      PolicyDocument:
        Statement:
          - !If
            - HasSecretsBucket
            - Sid: SecretsBucket
              Effect: Allow
              Action:
                - s3:Get*
                - s3:List*
              Resource:
                - !Sub
                  - "arn:aws:s3:::${Bucket}/*"
                  - Bucket: !If [ CreateSecretsBucket, !Ref ManagedSecretsBucket, !Ref SecretsBucket ]
                - !Sub
                  - "arn:aws:s3:::${Bucket}"
                  - Bucket: !If [ CreateSecretsBucket, !Ref ManagedSecretsBucket, !Ref SecretsBucket ]
            - !Ref AWS::NoValue
          - !If
            - UseArtifactsBucket
            - Sid: ArtifactsBucket
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:ListBucket
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:PutObjectVersionAcl
              Resource:
                - !Sub "arn:aws:s3:::${ArtifactsBucket}/*"
                - !Sub "arn:aws:s3:::${ArtifactsBucket}"
            - !Ref AWS::NoValue
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudformation:DescribeStackResource
              - ec2:DescribeTags
            Resource: "*"
          - Sid: TerminateInstance
            Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:SetInstanceHealth
              - autoscaling:TerminateInstanceInAutoScalingGroup
            Resource: !Sub arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/${AWS::StackName}-AgentAutoScaleGroup-*
          - Sid: Logging
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource: "*"
          - Sid: Ssm
            Effect: Allow
            Action:
              - ssm:DescribeInstanceProperties
              - ssm:ListAssociations
              - ssm:PutInventory
              - ssm:UpdateInstanceInformation
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
              - ec2messages:AcknowledgeMessage
              - ec2messages:DeleteMessage
              - ec2messages:FailMessage
              - ec2messages:GetEndpoint
              - ec2messages:GetMessages
              - ec2messages:SendRepl
            Resource: "*"
      Roles:
        - !Ref IAMRole

  ManagedSecretsLoggingBucket:
    Type: AWS::S3::Bucket
    Condition: CreateSecretsBucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      Tags:
        - !If
          - UseCostAllocationTags
          - Key: !Ref CostAllocationTagName
            Value: !Ref CostAllocationTagValue
          - !Ref "AWS::NoValue"

  ManagedSecretsBucket:
    Type: AWS::S3::Bucket
    Condition: CreateSecretsBucket
    DeletionPolicy: Retain
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref ManagedSecretsLoggingBucket
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - !If
          - UseCostAllocationTags
          - Key: !Ref CostAllocationTagName
            Value: !Ref CostAllocationTagValue
          - !Ref "AWS::NoValue"

  ImageIdParameterStack:
    Type: AWS::CloudFormation::Stack
    Condition: HasImageIdParameter
    Properties:
      TemplateURL: https://s3.amazonaws.com/buildkite-aws-stack/ssm-ami/releases/0.1.0.yml
      Parameters:
        AmiParameterPath: !Ref ImageIdParameter

  AgentLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
          NetworkInterfaces:
            - DeviceIndex: 0
              AssociatePublicIpAddress: { Ref: AssociatePublicIpAddress }
              Groups: !Split [ ",", !If [ "CreateSecurityGroup", !Ref SecurityGroup, !Ref SecurityGroupId ] ]
          KeyName: !If [ "HasKeyName", !Ref KeyName, !Ref 'AWS::NoValue' ]
          IamInstanceProfile:
            Arn: !GetAtt "IAMInstanceProfile.Arn"
          InstanceType: !Select [ "0", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ]
          MetadataOptions:
            HttpTokens: !Ref IMDSv2Tokens
            # Allow containers using a Docker network on the host to receive IDMSv2 responses
            HttpPutResponseHopLimit: 2
          ImageId: !If
            - HasImageId
            - !Ref ImageId
            - !If
              - HasImageIdParameter
              - !GetAtt ImageIdParameterStack.Outputs.ImageId
              - !If
                - UseWindowsAgents
                - !FindInMap
                  - AWSRegion2AMI
                  - !Ref 'AWS::Region'
                  - 'windows'
                - !If
                  - UsingArmInstances
                  - !FindInMap
                    - AWSRegion2AMI
                    - !Ref 'AWS::Region'
                    - 'linuxarm64'
                  - !FindInMap
                    - AWSRegion2AMI
                    - !Ref 'AWS::Region'
                    - 'linuxamd64'
          BlockDeviceMappings:
            - DeviceName: !If [ UseDefaultRootVolumeName, !If [ UseWindowsAgents, /dev/sda1, /dev/xvda ], !Ref RootVolumeName ]
              Ebs: { VolumeSize: !Ref RootVolumeSize, VolumeType: !Ref RootVolumeType }
          TagSpecifications:
            - ResourceType: instance
              Tags:
                - Key: Role
                  Value: buildkite-agent
                - Key: Name
                  Value: buildkite-agent
                - Key: BuildkiteAgentRelease
                  Value: !Ref BuildkiteAgentRelease
                - Key: BuildkiteQueue
                  Value: !Ref BuildkiteQueue
                - !If
                  - UseCostAllocationTags
                  - Key: !Ref CostAllocationTagName
                    Value: !Ref CostAllocationTagValue
                  - !Ref "AWS::NoValue"
          UserData:
            Fn::Base64: !If
              - UseWindowsAgents
              - !Sub
                - |
                  <powershell>
                  $Env:DOCKER_USERNS_REMAP="${EnableDockerUserNamespaceRemap}"
                  $Env:DOCKER_EXPERIMENTAL="${EnableDockerExperimental}"
                  powershell -file C:\buildkite-agent\bin\bk-configure-docker.ps1 >> C:\buildkite-agent\elastic-stack.log

                  $Env:BUILDKITE_STACK_NAME="${AWS::StackName}"
                  $Env:BUILDKITE_STACK_VERSION="v5.7.2"
                  $Env:BUILDKITE_SCALE_IN_IDLE_PERIOD="${ScaleInIdlePeriod}"
                  $Env:BUILDKITE_SECRETS_BUCKET="${LocalSecretsBucket}"
                  $Env:BUILDKITE_AGENT_TOKEN_PATH="${AgentTokenPath}"
                  $Env:BUILDKITE_AGENTS_PER_INSTANCE="${AgentsPerInstance}"
                  $Env:BUILDKITE_AGENT_TAGS="${BuildkiteAgentTags}"
                  $Env:BUILDKITE_AGENT_TIMESTAMP_LINES="${BuildkiteAgentTimestampLines}"
                  $Env:BUILDKITE_AGENT_EXPERIMENTS="${BuildkiteAgentExperiments}"
                  $Env:BUILDKITE_AGENT_RELEASE="${BuildkiteAgentRelease}"
                  $Env:BUILDKITE_QUEUE="${BuildkiteQueue}"
                  $Env:BUILDKITE_AGENT_ENABLE_GIT_MIRRORS_EXPERIMENT="${EnableAgentGitMirrorsExperiment}"
                  $Env:BUILDKITE_ELASTIC_BOOTSTRAP_SCRIPT="${BootstrapScriptUrl}"
                  $Env:BUILDKITE_AUTHORIZED_USERS_URL="${AuthorizedUsersUrl}"
                  $Env:BUILDKITE_ECR_POLICY="${ECRAccessPolicy}"
                  $Env:BUILDKITE_TERMINATE_INSTANCE_AFTER_JOB="${BuildkiteTerminateInstanceAfterJob}"
                  $Env:BUILDKITE_ADDITIONAL_SUDO_PERMISSIONS="${BuildkiteAdditionalSudoPermissions}"
                  $Env:BUILDKITE_WINDOWS_ADMINISTRATOR="${BuildkiteWindowsAdministrator}"
                  $Env:AWS_DEFAULT_REGION="${AWS::Region}"
                  $Env:SECRETS_PLUGIN_ENABLED="${EnableSecretsPlugin}"
                  $Env:ECR_PLUGIN_ENABLED="${EnableECRPlugin}"
                  $Env:DOCKER_LOGIN_PLUGIN_ENABLED="${EnableDockerLoginPlugin}"
                  $Env:AWS_REGION="${AWS::Region}"
                  powershell -file C:\buildkite-agent\bin\bk-install-elastic-stack.ps1 >> C:\buildkite-agent\elastic-stack.log
                  </powershell>
                - {
                    LocalSecretsBucket: !If [ CreateSecretsBucket, !Ref ManagedSecretsBucket, !Ref SecretsBucket ],
                    AgentTokenPath: !If [ UseCustomerManagedParameterPath, !Ref BuildkiteAgentTokenParameterStorePath, !Ref BuildkiteAgentTokenParameter ],
                  }
              - !Sub
                - |
                  Content-Type: multipart/mixed; boundary="==BOUNDARY=="
                  MIME-Version: 1.0
                  --==BOUNDARY==
                  Content-Type: text/cloud-boothook; charset="us-ascii"
                  BUILDKITE_ENABLE_INSTANCE_STORAGE="${EnableInstanceStorage}" \
                    /usr/local/bin/bk-mount-instance-storage.sh
                  --==BOUNDARY==
                  Content-Type: text/cloud-boothook; charset="us-ascii"
                  DOCKER_USERNS_REMAP=${EnableDockerUserNamespaceRemap} \
                  DOCKER_EXPERIMENTAL=${EnableDockerExperimental} \
                  BUILDKITE_ENABLE_INSTANCE_STORAGE="${EnableInstanceStorage}" \
                    /usr/local/bin/bk-configure-docker.sh
                  --==BOUNDARY==
                  Content-Type: text/x-shellscript; charset="us-ascii"
                  #!/bin/bash -v
                  BUILDKITE_STACK_NAME="${AWS::StackName}" \
                  BUILDKITE_STACK_VERSION="v5.7.2" \
                  BUILDKITE_SCALE_IN_IDLE_PERIOD="${ScaleInIdlePeriod}" \
                  BUILDKITE_SECRETS_BUCKET="${LocalSecretsBucket}" \
                  BUILDKITE_AGENT_TOKEN_PATH="${AgentTokenPath}" \
                  BUILDKITE_AGENTS_PER_INSTANCE="${AgentsPerInstance}" \
                  BUILDKITE_AGENT_TAGS="${BuildkiteAgentTags}" \
                  BUILDKITE_AGENT_TIMESTAMP_LINES="${BuildkiteAgentTimestampLines}" \
                  BUILDKITE_AGENT_EXPERIMENTS="${BuildkiteAgentExperiments}" \
                  BUILDKITE_AGENT_RELEASE="${BuildkiteAgentRelease}" \
                  BUILDKITE_QUEUE="${BuildkiteQueue}" \
                  BUILDKITE_AGENT_ENABLE_GIT_MIRRORS_EXPERIMENT="${EnableAgentGitMirrorsExperiment}" \
                  BUILDKITE_ELASTIC_BOOTSTRAP_SCRIPT="${BootstrapScriptUrl}" \
                  BUILDKITE_ENABLE_INSTANCE_STORAGE="${EnableInstanceStorage}" \
                  BUILDKITE_AUTHORIZED_USERS_URL="${AuthorizedUsersUrl}" \
                  BUILDKITE_ECR_POLICY="${ECRAccessPolicy}" \
                  BUILDKITE_TERMINATE_INSTANCE_AFTER_JOB="${BuildkiteTerminateInstanceAfterJob}" \
                  BUILDKITE_ADDITIONAL_SUDO_PERMISSIONS="${BuildkiteAdditionalSudoPermissions}" \
                  AWS_DEFAULT_REGION="${AWS::Region}" \
                  SECRETS_PLUGIN_ENABLED="${EnableSecretsPlugin}" \
                  ECR_PLUGIN_ENABLED="${EnableECRPlugin}" \
                  DOCKER_LOGIN_PLUGIN_ENABLED="${EnableDockerLoginPlugin}" \
                  DOCKER_EXPERIMENTAL="${EnableDockerExperimental}" \
                  AWS_REGION="${AWS::Region}" \
                    /usr/local/bin/bk-install-elastic-stack.sh
                  --==BOUNDARY==--
                - {
                    LocalSecretsBucket: !If [ CreateSecretsBucket, !Ref ManagedSecretsBucket, !Ref SecretsBucket ],
                    AgentTokenPath: !If [ UseCustomerManagedParameterPath, !Ref BuildkiteAgentTokenParameterStorePath, !Ref BuildkiteAgentTokenParameter ],
                  }

  AgentAutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - IAMPolicies
      - VpcComplete
    Properties:
      VPCZoneIdentifier: !If [ "CreateVpcResources", [ !Ref Subnet0, !Ref Subnet1 ], !Ref Subnets ]
      MixedInstancesPolicy:
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: !If [ SpotPriceSet, 0, !Ref OnDemandPercentage ]
          SpotAllocationStrategy: capacity-optimized
          SpotMaxPrice: !If [SpotPriceSet, !Ref SpotPrice, !Ref "AWS::NoValue"]
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref AgentLaunchTemplate
            Version: !GetAtt "AgentLaunchTemplate.LatestVersionNumber"
          Overrides:
          - InstanceType: !Select [ "0", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ]
          - !If
            - UseInstanceType2
            - InstanceType: !Select [ "1", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ]
            - !Ref "AWS::NoValue"
          - !If
            - UseInstanceType3
            - InstanceType: !Select [ "2", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ]
            - !Ref "AWS::NoValue"
          - !If
            - UseInstanceType4
            - InstanceType: !Select [ "3", !Split [ ",", !Join [ ",", [ !Ref InstanceType, "", "", "" ] ] ] ]
            - !Ref "AWS::NoValue"
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      Cooldown: 60
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
            - GroupMinSize
            - GroupMaxSize
            - GroupInServiceInstances
            - GroupTerminatingInstances
            - GroupPendingInstances
      TerminationPolicies:
        - OldestLaunchConfiguration
        - ClosestToNextInstanceHour
      NewInstancesProtectedFromScaleIn: true
    CreationPolicy:
      ResourceSignal:
        Timeout: !If [ UseDefaultInstanceCreationTimeout, !If [ UseWindowsAgents, PT10M, PT5M ], !Ref InstanceCreationTimeout ]
        Count: !Ref MinSize
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  AsgProcessSuspenderRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If [ SetInstanceRolePermissionsBoundaryARN, !Ref InstanceRolePermissionsBoundaryARN, !Ref "AWS::NoValue" ]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: AsgProcessModification
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'autoscaling:SuspendProcesses'
                Resource: !Sub arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/${AWS::StackName}-AgentAutoScaleGroup-*

  AzRebalancingSuspenderFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: 'Disables AZ Rebalancing on the agent ASG'
      Code:
        ZipFile: |
          import cfnresponse
          import boto3
          def handler(event, context):
            try:
              if event['RequestType'] == 'Delete':
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {}, "CustomResourcePhysicalID")
              else:
                client = boto3.client('autoscaling')
                props = event['ResourceProperties']
                response = client.suspend_processes(AutoScalingGroupName=props['AutoScalingGroupName'], ScalingProcesses=['AZRebalance'])
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {}, "CustomResourcePhysicalID")
            except BaseException as err:
              print('ERROR: ', err)
              cfnresponse.send(event, context, cfnresponse.FAILED, {}, "CustomResourcePhysicalID")
      Handler: index.handler
      Role: !GetAtt AsgProcessSuspenderRole.Arn
      Runtime: 'python3.7'

  AzRebalancingSuspender:
    Type: AWS::CloudFormation::CustomResource
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt AzRebalancingSuspenderFunction.Arn
      AutoScalingGroupName: !Ref AgentAutoScaleGroup

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateSecurityGroup
    Properties:
      GroupDescription: Enable access to agents
      VpcId: !If [ "CreateVpcResources",  !Ref Vpc, !Ref VpcId ]
      Tags:
      - Key: Name
        Value: !Ref 'AWS::StackName'

  SecurityGroupSshIngress:
    Condition: EnableSshIngress
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt SecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0

  Autoscaling:
    Type: AWS::Serverless::Application
    Condition: HasVariableSize
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172840064832:applications/buildkite-agent-scaler
        SemanticVersion: '1.1.3'
      Parameters:
        BuildkiteAgentTokenParameter: !If [ UseCustomerManagedParameterPath, !Ref BuildkiteAgentTokenParameterStorePath, !Ref BuildkiteAgentTokenParameter ]
        BuildkiteAgentTokenParameterStoreKMSKey: !If [ UseCustomerManagedKeyForParameterStore, !Ref BuildkiteAgentTokenParameterStoreKMSKey, "" ]
        BuildkiteQueue: !Ref BuildkiteQueue
        AgentsPerInstance: !Ref AgentsPerInstance
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        AgentAutoScaleGroup: !Ref AgentAutoScaleGroup
        ScaleOutFactor: !Ref ScaleOutFactor
        ScaleOutForWaitingJobs: !Ref ScaleOutForWaitingJobs
